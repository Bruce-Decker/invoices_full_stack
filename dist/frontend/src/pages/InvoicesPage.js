"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = InvoicesPage;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_query_1 = require("@tanstack/react-query");
const api_1 = require("../services/api");
const react_2 = require("@headlessui/react");
const date_fns_1 = require("date-fns");
function InvoicesPage() {
    const [selectedInvoice, setSelectedInvoice] = (0, react_1.useState)(null);
    const [page, setPage] = (0, react_1.useState)(1);
    const limit = 10;
    const { data, isLoading, error } = (0, react_query_1.useQuery)({
        queryKey: ['invoices', page],
        queryFn: () => (0, api_1.getInvoices)(page, limit),
    });
    if (isLoading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("div", { className: "text-xl", children: "Loading..." }) }));
    }
    if (error) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "min-h-screen flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("div", { className: "text-xl text-red-500", children: "Error loading invoices" }) }));
    }
    const { data: invoices, meta } = data;
    return ((0, jsx_runtime_1.jsxs)("div", { className: "container mx-auto px-4 py-8", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex justify-between items-center mb-6", children: (0, jsx_runtime_1.jsx)("h1", { className: "text-2xl font-bold", children: "Invoices" }) }), (0, jsx_runtime_1.jsx)("div", { className: "bg-white shadow-md rounded-lg overflow-hidden", children: (0, jsx_runtime_1.jsxs)("table", { className: "min-w-full divide-y divide-gray-200", children: [(0, jsx_runtime_1.jsx)("thead", { className: "bg-gray-50", children: (0, jsx_runtime_1.jsxs)("tr", { children: [(0, jsx_runtime_1.jsx)("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Date" }), (0, jsx_runtime_1.jsx)("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Payee" }), (0, jsx_runtime_1.jsx)("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Description" }), (0, jsx_runtime_1.jsx)("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Due Date" }), (0, jsx_runtime_1.jsx)("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Amount" }), (0, jsx_runtime_1.jsx)("th", { className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Status" })] }) }), (0, jsx_runtime_1.jsx)("tbody", { className: "bg-white divide-y divide-gray-200", children: invoices.map((invoice) => ((0, jsx_runtime_1.jsxs)("tr", { onClick: () => setSelectedInvoice(invoice), className: "hover:bg-gray-50 cursor-pointer", children: [(0, jsx_runtime_1.jsx)("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: (0, date_fns_1.format)(new Date(invoice.createdAt), 'MM/dd/yy') }), (0, jsx_runtime_1.jsx)("td", { className: "px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900", children: invoice.vendorName }), (0, jsx_runtime_1.jsx)("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: invoice.description }), (0, jsx_runtime_1.jsx)("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: (0, date_fns_1.format)(new Date(invoice.dueDate), 'MM/dd/yy') }), (0, jsx_runtime_1.jsxs)("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: ["$", invoice.amount.toFixed(2)] }), (0, jsx_runtime_1.jsx)("td", { className: "px-6 py-4 whitespace-nowrap", children: (0, jsx_runtime_1.jsx)("span", { className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${invoice.paid
                                                ? 'bg-green-100 text-green-800'
                                                : 'bg-yellow-100 text-yellow-800'}`, children: invoice.paid ? 'Paid' : 'Open' }) })] }, invoice.id))) })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-4 flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex-1 flex justify-between sm:hidden", children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => setPage((p) => Math.max(1, p - 1)), disabled: page === 1, className: "relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50", children: "Previous" }), (0, jsx_runtime_1.jsx)("button", { onClick: () => setPage((p) => p + 1), disabled: page >= meta.totalPages, className: "ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50", children: "Next" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "hidden sm:flex-1 sm:flex sm:items-center sm:justify-between", children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-gray-700", children: ["Showing ", (0, jsx_runtime_1.jsx)("span", { className: "font-medium", children: meta.page }), " to", ' ', (0, jsx_runtime_1.jsx)("span", { className: "font-medium", children: meta.totalPages }), " of", ' ', (0, jsx_runtime_1.jsx)("span", { className: "font-medium", children: meta.total }), " results"] }) }), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsxs)("nav", { className: "relative z-0 inline-flex rounded-md shadow-sm -space-x-px", "aria-label": "Pagination", children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => setPage((p) => Math.max(1, p - 1)), disabled: page === 1, className: "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50", children: "Previous" }), Array.from({ length: meta.totalPages }, (_, i) => i + 1).map((pageNum) => ((0, jsx_runtime_1.jsx)("button", { onClick: () => setPage(pageNum), className: `relative inline-flex items-center px-4 py-2 border text-sm font-medium ${page === pageNum
                                                ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600'
                                                : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'}`, children: pageNum }, pageNum))), (0, jsx_runtime_1.jsx)("button", { onClick: () => setPage((p) => p + 1), disabled: page >= meta.totalPages, className: "relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50", children: "Next" })] }) })] })] }), (0, jsx_runtime_1.jsx)(react_2.Dialog, { open: !!selectedInvoice, onClose: () => setSelectedInvoice(null), className: "fixed inset-0 z-10 overflow-y-auto", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-center min-h-screen", children: [(0, jsx_runtime_1.jsx)(react_2.Dialog.Overlay, { className: "fixed inset-0 bg-black opacity-30" }), (0, jsx_runtime_1.jsx)("div", { className: "relative bg-white rounded-lg max-w-md w-full mx-4 p-6", children: selectedInvoice && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(react_2.Dialog.Title, { className: "text-lg font-medium mb-4", children: "Invoice Details" }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700", children: "Vendor" }), (0, jsx_runtime_1.jsx)("div", { className: "mt-1 text-sm text-gray-900", children: selectedInvoice.vendorName })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700", children: "Amount" }), (0, jsx_runtime_1.jsxs)("div", { className: "mt-1 text-sm text-gray-900", children: ["$", selectedInvoice.amount.toFixed(2)] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700", children: "Due Date" }), (0, jsx_runtime_1.jsx)("div", { className: "mt-1 text-sm text-gray-900", children: (0, date_fns_1.format)(new Date(selectedInvoice.dueDate), 'MM/dd/yyyy') })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700", children: "Description" }), (0, jsx_runtime_1.jsx)("div", { className: "mt-1 text-sm text-gray-900", children: selectedInvoice.description })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700", children: "Status" }), (0, jsx_runtime_1.jsx)("div", { className: "mt-1", children: (0, jsx_runtime_1.jsx)("span", { className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${selectedInvoice.paid
                                                                ? 'bg-green-100 text-green-800'
                                                                : 'bg-yellow-100 text-yellow-800'}`, children: selectedInvoice.paid ? 'Paid' : 'Open' }) })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "mt-6", children: (0, jsx_runtime_1.jsx)("button", { type: "button", className: "w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm", onClick: () => setSelectedInvoice(null), children: "Close" }) })] })) })] }) })] }));
}
//# sourceMappingURL=InvoicesPage.js.map